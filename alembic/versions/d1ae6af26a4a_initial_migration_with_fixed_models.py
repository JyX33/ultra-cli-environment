"""Initial migration with fixed models

Revision ID: d1ae6af26a4a
Revises: 
Create Date: 2025-06-16 22:45:15.277787

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd1ae6af26a4a'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('article_content',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('url', sa.String(length=2000), nullable=False),
    sa.Column('url_hash', sa.String(length=64), nullable=False),
    sa.Column('title', sa.Text(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('author', sa.String(length=200), nullable=True),
    sa.Column('publish_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('scraped_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('scrape_success', sa.Boolean(), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('content_length', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('url_hash')
    )
    op.create_index('ix_article_content_author', 'article_content', ['author'], unique=False)
    op.create_index('ix_article_content_content_length', 'article_content', ['content_length'], unique=False)
    op.create_index('ix_article_content_publish_date', 'article_content', ['publish_date'], unique=False)
    op.create_index('ix_article_content_scrape_success', 'article_content', ['scrape_success'], unique=False)
    op.create_index('ix_article_content_scraped_at', 'article_content', ['scraped_at'], unique=False)
    op.create_table('check_runs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('subreddit', sa.String(length=100), nullable=False),
    sa.Column('topic', sa.String(length=200), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('posts_found', sa.Integer(), nullable=False),
    sa.Column('new_posts', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_check_runs_subreddit', 'check_runs', ['subreddit'], unique=False)
    op.create_index('ix_check_runs_subreddit_topic', 'check_runs', ['subreddit', 'topic'], unique=False)
    op.create_index('ix_check_runs_timestamp', 'check_runs', ['timestamp'], unique=False)
    op.create_index('ix_check_runs_topic', 'check_runs', ['topic'], unique=False)
    op.create_table('reddit_posts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('post_id', sa.String(length=50), nullable=False),
    sa.Column('subreddit', sa.String(length=100), nullable=False),
    sa.Column('title', sa.Text(), nullable=False),
    sa.Column('author', sa.String(length=100), nullable=True),
    sa.Column('selftext', sa.Text(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.Column('num_comments', sa.Integer(), nullable=False),
    sa.Column('url', sa.String(length=2000), nullable=False),
    sa.Column('permalink', sa.String(length=500), nullable=False),
    sa.Column('is_self', sa.Boolean(), nullable=False),
    sa.Column('over_18', sa.Boolean(), nullable=False),
    sa.Column('created_utc', sa.DateTime(timezone=True), nullable=False),
    sa.Column('first_seen', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_updated', sa.DateTime(timezone=True), nullable=False),
    sa.Column('check_run_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['check_run_id'], ['check_runs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('post_id')
    )
    op.create_index('ix_reddit_posts_check_run_id', 'reddit_posts', ['check_run_id'], unique=False)
    op.create_index('ix_reddit_posts_created_utc', 'reddit_posts', ['created_utc'], unique=False)
    op.create_index('ix_reddit_posts_first_seen', 'reddit_posts', ['first_seen'], unique=False)
    op.create_index('ix_reddit_posts_post_id', 'reddit_posts', ['post_id'], unique=False)
    op.create_index('ix_reddit_posts_score', 'reddit_posts', ['score'], unique=False)
    op.create_index('ix_reddit_posts_subreddit', 'reddit_posts', ['subreddit'], unique=False)
    op.create_index('ix_reddit_posts_subreddit_created', 'reddit_posts', ['subreddit', 'created_utc'], unique=False)
    op.create_table('comments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('comment_id', sa.String(length=50), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('author', sa.String(length=100), nullable=True),
    sa.Column('body', sa.Text(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.Column('created_utc', sa.DateTime(timezone=True), nullable=False),
    sa.Column('first_seen', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_updated', sa.DateTime(timezone=True), nullable=False),
    sa.Column('parent_id', sa.String(length=50), nullable=True),
    sa.Column('is_submitter', sa.Boolean(), nullable=False),
    sa.Column('stickied', sa.Boolean(), nullable=False),
    sa.Column('distinguished', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['reddit_posts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('comment_id')
    )
    op.create_index('ix_comments_author', 'comments', ['author'], unique=False)
    op.create_index('ix_comments_comment_id', 'comments', ['comment_id'], unique=False)
    op.create_index('ix_comments_created_utc', 'comments', ['created_utc'], unique=False)
    op.create_index('ix_comments_parent_id', 'comments', ['parent_id'], unique=False)
    op.create_index('ix_comments_post_created', 'comments', ['post_id', 'created_utc'], unique=False)
    op.create_index('ix_comments_post_id', 'comments', ['post_id'], unique=False)
    op.create_index('ix_comments_score', 'comments', ['score'], unique=False)
    op.create_table('post_snapshots',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('check_run_id', sa.Integer(), nullable=False),
    sa.Column('snapshot_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.Column('num_comments', sa.Integer(), nullable=False),
    sa.Column('score_delta', sa.Integer(), nullable=True),
    sa.Column('comments_delta', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['check_run_id'], ['check_runs.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['post_id'], ['reddit_posts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_post_snapshots_check_run_id', 'post_snapshots', ['check_run_id'], unique=False)
    op.create_index('ix_post_snapshots_comments', 'post_snapshots', ['num_comments'], unique=False)
    op.create_index('ix_post_snapshots_post_id', 'post_snapshots', ['post_id'], unique=False)
    op.create_index('ix_post_snapshots_post_run', 'post_snapshots', ['post_id', 'check_run_id'], unique=False)
    op.create_index('ix_post_snapshots_post_time', 'post_snapshots', ['post_id', 'snapshot_time'], unique=False)
    op.create_index('ix_post_snapshots_score', 'post_snapshots', ['score'], unique=False)
    op.create_index('ix_post_snapshots_snapshot_time', 'post_snapshots', ['snapshot_time'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_post_snapshots_snapshot_time', table_name='post_snapshots')
    op.drop_index('ix_post_snapshots_score', table_name='post_snapshots')
    op.drop_index('ix_post_snapshots_post_time', table_name='post_snapshots')
    op.drop_index('ix_post_snapshots_post_run', table_name='post_snapshots')
    op.drop_index('ix_post_snapshots_post_id', table_name='post_snapshots')
    op.drop_index('ix_post_snapshots_comments', table_name='post_snapshots')
    op.drop_index('ix_post_snapshots_check_run_id', table_name='post_snapshots')
    op.drop_table('post_snapshots')
    op.drop_index('ix_comments_score', table_name='comments')
    op.drop_index('ix_comments_post_id', table_name='comments')
    op.drop_index('ix_comments_post_created', table_name='comments')
    op.drop_index('ix_comments_parent_id', table_name='comments')
    op.drop_index('ix_comments_created_utc', table_name='comments')
    op.drop_index('ix_comments_comment_id', table_name='comments')
    op.drop_index('ix_comments_author', table_name='comments')
    op.drop_table('comments')
    op.drop_index('ix_reddit_posts_subreddit_created', table_name='reddit_posts')
    op.drop_index('ix_reddit_posts_subreddit', table_name='reddit_posts')
    op.drop_index('ix_reddit_posts_score', table_name='reddit_posts')
    op.drop_index('ix_reddit_posts_post_id', table_name='reddit_posts')
    op.drop_index('ix_reddit_posts_first_seen', table_name='reddit_posts')
    op.drop_index('ix_reddit_posts_created_utc', table_name='reddit_posts')
    op.drop_index('ix_reddit_posts_check_run_id', table_name='reddit_posts')
    op.drop_table('reddit_posts')
    op.drop_index('ix_check_runs_topic', table_name='check_runs')
    op.drop_index('ix_check_runs_timestamp', table_name='check_runs')
    op.drop_index('ix_check_runs_subreddit_topic', table_name='check_runs')
    op.drop_index('ix_check_runs_subreddit', table_name='check_runs')
    op.drop_table('check_runs')
    op.drop_index('ix_article_content_scraped_at', table_name='article_content')
    op.drop_index('ix_article_content_scrape_success', table_name='article_content')
    op.drop_index('ix_article_content_publish_date', table_name='article_content')
    op.drop_index('ix_article_content_content_length', table_name='article_content')
    op.drop_index('ix_article_content_author', table_name='article_content')
    op.drop_table('article_content')
    # ### end Alembic commands ###
